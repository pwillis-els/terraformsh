name: Continuous Integration

on:
  #push:
  pull_request:
    branches: [ main ]

jobs:
  test_pull_request:
    name: Run tests on a pull request
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version:
          - "0.11.15"
          #- "0.12.31"
          #- "0.13.7"
          #- "0.14.11"
          #- "0.15.5"
          #- "1.0.11"
          #- "1.1.9"
          #- "1.2.9"
          #- "1.3.10"
          #- "1.4.7"
          #- "1.5.7"
          #- "1.6.3"

    #services:
    #  postgres:
    #    image: postgres:latest
    #    env:
    #      POSTGRES_HOST: postgres
    #      POSTGRES_PORT: 5432
    #      POSTGRES_DB: postgres
    #      POSTGRES_USER: postgres
    #      POSTGRES_PASSWORD: password
    #    ports:
    #      - 5432:5432
    #    # set health checks to wait until postgres has started
    #    options: >-
    #      --health-cmd pg_isready
    #      --health-interval 10s
    #      --health-timeout 5s
    #      --health-retries 5

    container:
      image: "${{ matrix.container }}"

    steps:

      ## queries database with postgres client
      #- name: Query database
      #  run: psql -h postgres -d postgres -U postgres -c 'SELECT 1;'
      #  env:
      #    PGPASSWORD: password

      - name: Checkout git
        uses: actions/checkout@v2

      #- name: Build container
      #  uses: ./.github/actions/terraform-version-runner
      #  with:
      #    terraform-version: "${{matrix.version}}"
      #  env:
      #    DEBUG: 1
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ".github/actions/terraform-version-runner/Dockerfile"
          tags: "local-terraform:$${matrix.version}}"
          load: true
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
          push: false
          build-args: "TFVER=$${matrix.version}}"

      - name: Run test suite
        run: |
            pwd
            ls -la
            terraform --version
            make
